{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { timer, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ConfigService = /*#__PURE__*/(() => {\n  class ConfigService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.configUrl = 'http://backend:3000/api/page/';\n    }\n    getConfig(intervalTime, userId) {\n      const headers = new HttpHeaders({\n        'Content-Security-Policy': \"default-src 'self'; script-src 'self' http://ec2-51-20-249-219.eu-north-1.compute.amazonaws.com; style-src 'self' http://ec2-51-20-249-219.eu-north-1.compute.amazonaws.com; connect-src 'self' http://ec2-51-20-249-219.eu-north-1.compute.amazonaws.com; img-src 'self' data: http://ec2-51-20-249-219.eu-north-1.compute.amazonaws.com;\",\n        'Content-Type': 'text/html; charset=UTF-8'\n      });\n      return timer(0, intervalTime).pipe(switchMap(() => this.httpClient.get(`${this.configUrl}${userId}`, {\n        headers\n      })));\n    }\n    static #_ = this.ɵfac = function ConfigService_Factory(t) {\n      return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConfigService,\n      factory: ConfigService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ConfigService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}