{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConfigService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.previousValue = null;\n    this.configUrl = 'http://localhost:3000/api/page';\n  }\n  getConfig(intervalTime) {\n    // const headers = new HttpHeaders({\n    //   'Content-Security-Policy': \"default-src 'self'; script-src 'self' http://localhost:3000; style-src 'self' http://localhost:3000; connect-src 'self' http://localhost:3000; img-src 'self' data: http://localhost:3000;\",\n    //   'Content-Type': 'text/html; charset=UTF-8'\n    // })\n    // return timer(0, intervalTime).pipe(\n    //     switchMap(() => this.httpClient.get<any[]>(this.configUrl)),\n    // )\n    return this.httpClient.get(this.configUrl);\n  }\n  static #_ = this.ɵfac = function ConfigService_Factory(t) {\n    return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfigService,\n    factory: ConfigService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ConfigService","constructor","httpClient","previousValue","configUrl","getConfig","intervalTime","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/andrij/Documents/angular/tgBot/UI/tg_mini_app/src/app/services/config.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable, interval, timer, filter,switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  constructor(private httpClient: HttpClient) {  }\n\n  previousValue: string | null = null\n  private configUrl = 'http://localhost:3000/api/page';\n\n  getConfig(intervalTime: number): Observable<any[]> {\n   \n    // const headers = new HttpHeaders({\n    //   'Content-Security-Policy': \"default-src 'self'; script-src 'self' http://localhost:3000; style-src 'self' http://localhost:3000; connect-src 'self' http://localhost:3000; img-src 'self' data: http://localhost:3000;\",\n    //   'Content-Type': 'text/html; charset=UTF-8'\n    // })\n\n    // return timer(0, intervalTime).pipe(\n    //     switchMap(() => this.httpClient.get<any[]>(this.configUrl)),\n    // )\n    return this.httpClient.get<any[]>(this.configUrl);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EACxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAE9B,KAAAC,aAAa,GAAkB,IAAI;IAC3B,KAAAC,SAAS,GAAG,gCAAgC;EAHL;EAK/CC,SAASA,CAACC,YAAoB;IAE5B;IACA;IACA;IACA;IAEA;IACA;IACA;IACA,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAQ,IAAI,CAACH,SAAS,CAAC;EACnD;EAAC,QAAAI,CAAA,G;qBAjBUR,aAAa,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbb,aAAa;IAAAc,OAAA,EAAbd,aAAa,CAAAe,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}