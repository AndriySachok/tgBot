{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./services/config.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class AppComponent {\n  constructor(route, config, sanitizer) {\n    this.route = route;\n    this.config = config;\n    this.sanitizer = sanitizer;\n  }\n  ngOnInit() {\n    const intervalTime = 3000;\n    this.route.paramMap.subscribe(params => {\n      this.userId = params.get('userId');\n      console.log(this.userId);\n      this.config.getConfig(intervalTime, this.userId).subscribe({\n        next: data => {\n          // this.webPage = data.replace(/\\\\/g, \"\").slice(1, -1)\n          this.userData = data;\n          console.log(this.userData);\n        },\n        error: error => {\n          console.error('Error while getting response', error);\n        }\n      });\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ConfigService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[3, \"innerHTML\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","route","config","sanitizer","ngOnInit","intervalTime","paramMap","subscribe","params","userId","get","console","log","getConfig","next","data","userData","error","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ConfigService","i3","DomSanitizer","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement"],"sources":["/Users/andrij/Documents/angular/tgBot/UI/tg_mini_app/src/app/app.component.ts"],"sourcesContent":["import { ConfigService } from './services/config.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SafeHtmlPipe } from './random_stuff/safeHtml';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-root',\n  template: `<div [innerHTML]=\"\"></div>`,\n // styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  constructor(private route: ActivatedRoute, private config: ConfigService, private readonly sanitizer: DomSanitizer) {}\n\n  userId!: string | null;\n  userData!: string | null;\n\n  ngOnInit(): void {\n    const intervalTime = 3000\n\n\n    this.route.paramMap.subscribe(params => {\n      this.userId = params.get('userId');\n      console.log(this.userId)\n\n      this.config.getConfig(intervalTime, this.userId).subscribe({\n        next: (data) => {\n         // this.webPage = data.replace(/\\\\/g, \"\").slice(1, -1)\n          this.userData = data\n          console.log(this.userData)\n        },\n        error: (error) => {\n          console.error('Error while getting response', error)\n        }\n      })\n\n    })\n    \n  }\n\n}\n"],"mappings":";;;;AAaA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,KAAqB,EAAUC,MAAqB,EAAmBC,SAAuB;IAA9F,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAkC,KAAAC,SAAS,GAATA,SAAS;EAAiB;EAKrHC,QAAQA,CAAA;IACN,MAAMC,YAAY,GAAG,IAAI;IAGzB,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,IAAI,CAACC,MAAM,GAAGD,MAAM,CAACE,GAAG,CAAC,QAAQ,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC;MAExB,IAAI,CAACP,MAAM,CAACW,SAAS,CAACR,YAAY,EAAE,IAAI,CAACI,MAAM,CAAC,CAACF,SAAS,CAAC;QACzDO,IAAI,EAAGC,IAAI,IAAI;UACd;UACC,IAAI,CAACC,QAAQ,GAAGD,IAAI;UACpBJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,QAAQ,CAAC;QAC5B,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfN,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;OACD,CAAC;IAEJ,CAAC,CAAC;EAEJ;EAAC,QAAAC,CAAA,G;qBA3BUnB,YAAY,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZ5B,YAAY;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAJZf,EAAA,CAAAiB,SAAA,aAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}